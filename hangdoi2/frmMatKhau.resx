<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="mainPannel.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        DQFj4vvCix+HAAAAAElFTkSuQmCC
</value>
  </data>
</root>